trigger:
- main
- staging
- release

parameters:
  - name: Platforms
    type: object
    default:
    - x64
    - arm64
  - name: Configurations
    type: object
    default:
    - debug
    - release

variables:
  MSIXVersion: '0.101'
  solution: '**/GitHubExtension.sln'
  appxPackageDir: 'AppxPackages'
  testOutputArtifactDir: 'TestResults'

resources:
  repositories:
  - repository: m365Pipelines
    type: git
    name: 1ESPipelineTemplates/M365GPT
    ref: refs/tags/release

extends:
  template: v1/M365.Official.PipelineTemplate.yml@m365Pipelines
  parameters:
    sdl:
      roslyn:
        enabled: true
      binskim:
        break: false
        scanOutputDirectoryOnly: true
      policheck:
        severity: Note
        break: false
    pool:
      name: Azure-Pipelines-1ESPT-ExDShared
      image: windows-2022
      os: windows

    stages:
    - stage: build
      displayName: Build
      jobs:
      - ${{ each configuration in parameters.Configurations }}:
            - ${{ each platform in parameters.Platforms }}:
              - job: Build_${{ platform }}_${{ configuration }}
                steps:

                - task: TouchdownBuildTask@5
                  displayName: Send and Download Localization Files for Artifacts
                  condition: and(eq(variables['EnableLocalization'], 'true'), eq(variables['UpdateLocalization'], 'true'))
                  inputs:
                    resourceFilePath: |
                      **\en-US\*.resw
                    outputDirectoryRoot: LocOutput
                    localizationTarget: true
                    appendRelativeDir: true
                    teamId: '123893'
                    authType: 'FederatedIdentityTDBuild'
                    FederatedIdentityTDBuildServiceConnection: 'CmdPalExtensionsTdBuildConnection'
                    pseudoSetting: 'Included'
                    cultureMappingType: 'None'

                - task: TouchdownBuildTask@5
                  displayName: Download and Use Localization Files
                  condition: eq(variables['EnableLocalization'], 'true')
                  inputs:
                    resourceFilePath: |
                      **\en-US\*.resw
                    teamId: '123893'
                    authType: 'FederatedIdentityTDBuild'
                    FederatedIdentityTDBuildServiceConnection: 'CmdPalExtensionsTdBuildConnection'
                    appendRelativeDir: true
                    localizationTarget: false
                    pseudoSetting: 'Included'
                    cultureMappingType: 'None'

                - task: PowerShell@2
                  displayName: Move Loc files one level up
                  condition: eq(variables['EnableLocalization'], 'true')
                  inputs:
                    targetType: inline
                    script: >-
                      $Files = Get-ChildItem . -R -Filter 'Resources.resw' | ? FullName -Like '*en-US\*\Resources.resw'

                      $Files | % { Move-Item -Verbose $_.Directory $_.Directory.Parent.Parent -EA:Ignore }

                      $Files = Get-ChildItem . -R -Filter 'PDP.xml' | ? FullName -Like '*en-US\*\PDP.xml'

                      $Files | % { Move-Item -Verbose $_.Directory $_.Directory.Parent.Parent -EA:Ignore }
                    pwsh: true

                - task: PowerShell@2
                  displayName: Archive Loc Output for Submission
                  condition: and(eq(variables['EnableLocalization'], 'true'), eq(variables['UpdateLocalization'], 'true'))
                  inputs:
                    PathtoPublish: LocOutput.tar.gz
                    ArtifactName: LocOutput
                    targetType: inline
                    script: >-
                      New-Item -Path 'locArchive' -ItemType Directory
                      
                      tar czf locArchive\LocOutput.tar.gz LocOutput
                    pwsh: true

                - task: PowerShell@2
                  displayName: Running script to update OAuth secrets
                  inputs:
                    filePath: './build/scripts/OAuthSecrets.ps1'
                    arguments: -ClientId $(GitHubOAuthClientId) -ClientSecret $(GitHubOAuthClientSecret)
                
                - task: PowerShell@2
                  displayName: Setting build version info
                  inputs:
                    filePath: './build/scripts/SetupBuildInfo.ps1'
                    arguments: -Version $(MSIXVersion) -IsAzurePipelineBuild

                - task: PowerShell@2
                  displayName: Building MSIX
                  inputs:
                    filePath: './build/scripts/Build.ps1'
                    arguments: -Platform "${{ platform }}" -Configuration "${{ configuration }}" -Version $(MSIXVersion)
                
                - template: ./build/templates/EsrpSigning-Steps.yml@self
                  parameters:
                    displayName: Submit *.msix to ESRP for code signing
                    inputs:
                      FolderPath: 'BuildOutput'
                      Pattern: '*.msix'
                      UseMinimatch: true
                      signConfigType: inlineSignParams
                      inlineOperation: |
                        [
                          {
                            "keycode": "CP-230012",
                            "operationSetCode": "SigntoolSign",
                            "parameters": [
                              {
                                "parameterName": "OpusName",
                                "parameterValue": "Microsoft"
                              },
                              {
                                "parameterName": "OpusInfo",
                                "parameterValue": "http://www.microsoft.com"
                              },
                              {
                                "parameterName": "PageHash",
                                "parameterValue": "/NPH"
                              },
                              {
                                "parameterName": "FileDigest",
                                "parameterValue": "/fd sha256"
                              },
                              {
                                "parameterName": "TimeStamp",
                                "parameterValue": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
                              }
                            ],
                            "toolName": "signtool.exe",
                            "toolVersion": "6.2.9304.0"
                          }
                        ]
                        
                - task: PowerShell@2
                  displayName: 'Run Unittests'
                  condition: ne('${{ platform }}', 'arm64')
                  retryCountOnTaskFailure: 2
                  inputs:
                    filePath: 'build/scripts/Test.ps1'
                    arguments: -Platform "${{ platform }}" -Configuration "${{ configuration }}" -IsAzurePipelineBuild
                    
                - task: PublishTestResults@2
                  displayName: 'Add Test Results to ADO'
                  condition: and(always(), ne('${{ platform}}', 'arm64'))
                  inputs:
                    testResultsFormat: 'VSTest'
                    testResultsFiles: '*.trx'
                    searchFolder: '$(testOutputArtifactDir)'
                    mergeTestResults: true
                    failTaskOnFailedTests: true 
                    testRunTitle: '$(Agent.JobName)'
                    buildPlatform: '${{ platform }}'
                    buildConfiguration: '${{ configuration }}'


                - task: CopyFiles@2
                  displayName: Copying files to Artifact Staging directory
                  inputs:
                    SourceFolder: './BuildOutput'
                    Contents: '**'
                    TargetFolder: '$(Build.ArtifactStagingDirectory)'

                templateContext:
                  outputs:
                    - output: pipelineArtifact
                      targetPath: '$(Build.ArtifactStagingDirectory)'
                      artifactName: drop_${{ platform }}_${{ configuration }}
                    - output: pipelineArtifact
                      displayName: 'Publish Artifact: LocOutput'
                      condition: and(eq(variables['EnableLocalization'], 'true'), eq(variables['UpdateLocalization'], 'true'))
                      artifactName: LocOutput_${{ platform }}_${{ configuration }}
                      targetPath: LocArchive
                      sbomPackageName: devhomegithubextension.locoutput
                      sbomPackageVersion: $(MSIXVersion)
